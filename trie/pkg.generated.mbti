// Generated using `moon info`, DON'T EDIT IT
package "Lampese/Algorithms-Moonbit/trie"

// Values

// Errors

// Types and methods
pub struct Trie[K, V] {
  root : TrieNode[K, V]
}
fn[K, V] Trie::clear(Self[K, V]) -> Unit
fn[K : Eq, V] Trie::contains(Self[K, V], Array[K]) -> Bool
fn[K : Eq, V] Trie::get(Self[K, V], Array[K]) -> V?
fn[K : Eq, V] Trie::insert(Self[K, V], Array[K], V) -> Unit
fn[K, V : Eq] Trie::is_empty(Self[K, V]) -> Bool
fn[K, V] Trie::new() -> Self[K, V]
impl[K, V] Default for Trie[K, V]

type TrieNode[K, V]

// Type aliases

// Traits

